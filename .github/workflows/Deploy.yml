name: Build and Deploy Node.js to Azure Container Apps

on:
  workflow_dispatch:
  push:
    branches: ["main"]

env:
  APP_NAME: "social-media"
  RESOURCE_GROUP: "docker-SC"
  DOCKER_IMAGE: "docker.io/ahmedaladdin0/social-media:${{ github.sha }}"
  NODE_VERSION: "18"

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Run tests (optional - remove if no tests)
      - name: Run tests
        run: npm test
        env:
          CI: true

      # Run linting (optional - remove if no linter)
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      # Build the application (if you have a build step)
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} .
          docker push ${{ env.DOCKER_IMAGE }}

      # Login to Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy to Azure Container Apps
      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ env.DOCKER_IMAGE }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.APP_NAME }}
